theory
  zero	: nat.
  s	: nat -> nat.
  equal	: P(nat, nat, nat).
  inductive s.
  inductive zero.
  equal(zero(),zero(),zero()) <-> true.
  forall y: nat, z: nat. (equal(zero(),s(y),z) <-> false).
  forall y: nat, z: nat. (equal(zero(),y,s(z)) <-> false).
  forall x: nat, z: nat. (equal(s(x),zero(),z) <-> false).
  forall x: nat, y: nat. (equal(s(x),y,zero()) <-> false).
  forall x: nat, y: nat, z: nat. (equal(s(x),s(y),s(z)) <-> equal(x,y,z)).
conjecture
  forall x: nat. equal(x,x,x).

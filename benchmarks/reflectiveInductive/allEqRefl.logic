theory
  zero	: nat.
  s	: nat ↦ nat.
  v0_nat	: var_nat.
  next_nat	: var_nat ↦ var_nat.
  inj_nat	: var_nat ↦ term_nat.
  zeroR	: term_nat.
  sR	: term_nat ↦ term_nat.
  equalR	: (term_nat, term_nat, term_nat) ↦ form.
  eq_nat	: (term_nat, term_nat) ↦ form.
  falseR	: form.
  orR	: (form, form) ↦ form.
  notR	: form ↦ form.
  forallR_nat	: (var_nat, form) ↦ form.
  empty	: env.
  push_nat	: (env, var_nat, nat) ↦ env.
  evalV_nat	: (env, var_nat) ↦ nat.
  eval_nat	: (env, term_nat) ↦ nat.
  equal	: P(nat, nat, nat).
  |=	: P(env, form).
  equal(zero(),zero(),zero()) ↔ ⊤.
  ∀ y: nat, z: nat. (equal(zero(),s(y),z) ↔ ⊥).
  ∀ y: nat, z: nat. (equal(zero(),y,s(z)) ↔ ⊥).
  ∀ x: nat, z: nat. (equal(s(x),zero(),z) ↔ ⊥).
  ∀ x: nat, y: nat. (equal(s(x),y,zero()) ↔ ⊥).
  ∀ x: nat, y: nat, z: nat. (equal(s(x),s(y),s(z)) ↔ equal(x,y,z)).
  ∀ env: env, v: var_nat, x: nat. evalV_nat(push_nat(env,v,x),v) = x.
  ∀ env: env, v: var_nat, w: var_nat, x: nat. (v ≠ w → evalV_nat(push_nat(env,w,x),v) = evalV_nat(env,v)).
  ∀ env: env, v: var_nat. eval_nat(env,inj_nat(v)) = evalV_nat(env,v).
  ∀ env: env. eval_nat(env,zeroR()) = zero().
  ∀ env: env, t0: term_nat. eval_nat(env,sR(t0)) = s(eval_nat(env,t0)).
  ∀ env: env, x: term_nat, y: term_nat. ((env |= eq_nat(x,y)) ↔ eval_nat(env,x) = eval_nat(env,y)).
  ∀ env: env, t0: term_nat, t1: term_nat, t2: term_nat. ((env |= equalR(t0,t1,t2)) ↔ equal(eval_nat(env,t0),eval_nat(env,t1),eval_nat(env,t2))).
  ∀ env: env. ((env |= falseR()) ↔ ⊥).
  ∀ env: env, phi: form. ((env |= notR(phi)) ↔ ¬(env |= phi)).
  ∀ env: env, phi: form, psi: form. ((env |= orR(phi,psi)) ↔ ((env |= phi) ∨ (env |= psi))).
  ∀ env: env, phi: form, v: var_nat. ((env |= forallR_nat(v,phi)) ↔ ∀ x: nat. (push_nat(env,v,x) |= phi)).
  ∀ phi: form. (((⊤ → (push_nat(empty(),v0_nat(),zero()) |= phi)) ∧ ∀ x0: nat. ((push_nat(empty(),v0_nat(),x0) |= phi) → (push_nat(empty(),v0_nat(),s(x0)) |= phi))) → ∀ x: nat. (push_nat(empty(),v0_nat(),x) |= phi)).
  ∀ x0: nat. zero() ≠ s(x0).
  ∀ x0: nat, x1: nat. (s(x0) = s(x1) → x0 = x1).
conjecture
  ∀ x: nat. equal(x,x,x).
